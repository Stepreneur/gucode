"use client"
import { useEffect, useState } from "react";
import { CheckCircle } from "lucide-react";

// ‡∏ï‡∏±‡πâ‡∏á‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà
const countdownTarget = new Date("2025-06-06T00:00:00");

export default function CourseSection() {
  const [timeLeft, setTimeLeft] = useState({ days: 0, hours: 0, minutes: 0, seconds: 0 });

  useEffect(() => {
    const interval = setInterval(() => {
      const now = new Date();
      const diff = countdownTarget - now;

      if (diff <= 0) {
        clearInterval(interval);
        setTimeLeft({ days: 0, hours: 0, minutes: 0, seconds: 0 });
      } else {
        const days = Math.floor(diff / (1000 * 60 * 60 * 24));
        const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);
        const minutes = Math.floor((diff / 1000 / 60) % 60);
        const seconds = Math.floor((diff / 1000) % 60);
        setTimeLeft({ days, hours, minutes, seconds });
      }
    }, 1000);
    return () => clearInterval(interval);
  }, []);

  const courseFeatures = [
    "‡πÄ‡∏Å‡∏µ‡∏¢‡∏£‡∏ï‡∏¥‡∏ö‡∏±‡∏ï‡∏£", 
    "Hosting / Domain ‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á", 
    "‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏à‡∏ö", 
    "‡πÄ‡∏ß‡πá‡∏ö‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á",
    "‡∏Ñ‡∏•‡∏¥‡∏õ‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á", 
    "‡∏ö‡∏£‡∏£‡∏•‡∏∏ HTML / CSS"
  ];

  return (
    <section id="courses" className="py-16 px-4 sm:px-6 lg:px-8 bg-white">
  <div className="max-w-7xl mx-auto">
    
    {/* Countdown */}
    <div className="flex flex-col items-center mb-14">
      <p className="text-sm text-zinc-400 mb-2">‡∏Ñ‡πà‡∏≤‡∏¢‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å</p>
      <div className="flex gap-3 sm:gap-5">
        {[
          { label: "‡∏ß‡∏±‡∏ô", value: timeLeft.days },
          { label: "‡∏ä‡∏°.", value: timeLeft.hours },
          { label: "‡∏ô‡∏≤‡∏ó‡∏µ", value: timeLeft.minutes },
          { label: "‡∏ß‡∏¥", value: timeLeft.seconds }
        ].map((item, index) => (
          <div
            key={index}
            className="flex flex-col items-center bg-black border border-zinc-700 text-white rounded-2xl px-3 sm:px-5 py-2 shadow-lg w-16 sm:w-20"
          >
            <span className="text-xl sm:text-3xl font-extrabold">
              {item.value.toString().padStart(2, '0')}
            </span>
            <span className="text-xs sm:text-sm mt-1 font-medium tracking-wide text-zinc-400">
              {item.label}
            </span>
          </div>
        ))}
      </div>
    </div>
 <h2 className="text-4xl sm:text-5xl  md:text-5xl font-bold text-black mb-8 leading-snug text-center lg:text-start">
          üî• GuJaCode Camp
        </h2>
    {/* Main Content: Stack on mobile, side-by-side on desktop with image on right */}
    <div className="flex flex-col lg:flex-row-reverse items-center gap-12 md:gap-0 md:pl-9 lg:gap-15">

      {/* Right Side on Desktop (Image) */}
      <div className="w-full lg:w-1/2 p-10">
        <div className="bg-black p-5 rounded-3xl shadow-xl transform rotate-3 hover:rotate-0 transition-transform duration-500 mb-0 sm:mb-6 lg:mb-20">
          <img className="rounded-2xl w-full" src="img/somsamai.jpg" alt="Mockup" />
        </div>
      </div>

      {/* Left Side (Text) */}
      <div className="w-full lg:w-1/2 p-4 pt-0   md:p-0">

        <p className="text-xl sm:text-2xl lg:text-xl text-black leading-relaxed mb-4">
           ‡∏ô‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏Ñ‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏î‡∏π‡∏à‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏±‡πà‡∏á‡πÄ‡∏â‡∏¢ ‡πÜ ‚Äî ‡∏°‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏Ñ‡πà‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏Å‡∏π‡∏à‡∏∞‡∏•‡∏≤‡∏Å‡∏°‡∏∂‡∏á‡πÑ‡∏õ‡∏à‡∏ô‡∏ó‡∏≥‡πÄ‡∏ß‡πá‡∏ö‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏°‡∏≤‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á
              ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà ‡∏ã‡∏∑‡πâ‡∏≠ domain, ‡∏ã‡∏∑‡πâ‡∏≠ hosting, ‡πÑ‡∏õ‡∏à‡∏ô‡∏ñ‡∏∂‡∏á Deploy ‡πÄ‡∏ß‡πá‡∏ö‡πÉ‡∏´‡πâ‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå‡πÑ‡∏î‡πâ ‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà‡∏Å‡∏π‡∏ó‡∏≥‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏´‡∏≤‡∏ï‡∏±‡∏á‡∏à‡∏£‡∏¥‡∏á ‡πÜ
        </p>
        <p className="text-xl sm:text-2xl lg:text-xl text-black leading-relaxed mb-6">
          ‡∏Å‡∏π‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ß‡πà‡∏≤‡∏°‡∏∂‡∏á‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡πÉ‡∏à ‚Äú‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏à‡∏£‡∏¥‡∏á ‡πÜ‚Äù ‡∏Ç‡∏≠‡∏á HTML ‡∏Å‡∏±‡∏ö CSS ...
        </p>

        <div className="grid grid-cols-1 sm:grid-cols-2 gap-3 mb-8">
          {courseFeatures.map((feature, index) => (
            <div key={index} className="flex items-start space-x-3">
              <CheckCircle size={20} className="text-green-500 mt-1 flex-shrink-0" />
              <span className="text-black/80 text-xl lg:text-base">{feature}</span>
            </div>
          ))}
        </div>

        <div className="text-black mb-8 text-xl sm:text-2xl lg:text-xl">
          <p className="mb-3 font-semibold">
            ‡∏°‡∏∂‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡πÑ‡∏î‡πâ‡∏≠‡∏∞‡πÑ‡∏£‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏£‡πå‡∏™‡∏ô‡∏µ‡πâ‡πÄ‡∏•‡∏¢ ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏°‡∏∂‡∏á‡∏à‡∏∞‡∏ó‡∏≥ "‡πÄ‡∏ß‡πá‡∏ö‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏°‡∏∂‡∏á‡πÄ‡∏≠‡∏á" ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏à‡∏ö
          </p>
          <p>
            ‡∏ñ‡πâ‡∏≤‡∏°‡∏∂‡∏á‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏•‡∏∏‡∏¢ ‚Äî ‡∏Å‡∏π‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏û‡∏≤‡πÑ‡∏õ‡∏™‡∏∏‡∏î‡∏ó‡∏≤‡∏á ‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏°‡∏≤ ‡πÅ‡∏•‡πâ‡∏ß‡∏°‡∏≤‡πÄ‡∏à‡∏≠‡∏Å‡∏±‡∏ô‡πÉ‡∏ô‡∏™‡∏ô‡∏≤‡∏°‡∏à‡∏£‡∏¥‡∏á‡πÑ‡∏≠‡∏™‡∏±‡∏™
          </p>
        </div>

        <div className="flex flex-col sm:flex-row gap-4">
          <button className="bg-black text-white px-6 py-3 rounded-full font-semibold text-base hover:bg-gray-800 transition-all duration-300">
            ‡∏™‡∏°‡∏±‡∏Ñ‡∏£
          </button>
          <button className="border border-gray-700 text-black px-6 py-3 rounded-full font-semibold text-base hover:bg-gray-100 transition-all duration-300">
            ‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
          </button>
        </div>
      </div>
    </div>
  </div>
</section>


  );
}
